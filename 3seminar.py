# Задача 20: * В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:A, E, I, O, U, L, N, S, T, R – 1 очко; D, G – 2 очка; B, C, M, P – 3 очка; F, H, V, W, Y – 4 очка; K – 5 очков; J, X – 8 очков; Q, Z – 10 очков. А русские буквы оцениваются так: А, В, Е, И, Н, О, Р, С, Т – 1 очко; Д, К, Л, М, П, У – 2 очка; Б, Г, Ё, Ь, Я – 3 очка; Й, Ы – 4 очка; Ж, З, Х, Ц, Ч – 5 очков; Ш, Э, Ю – 8 очков; Ф, Щ, Ъ – 10 очков. Напишите программу, которая вычисляет стоимость введенного пользователем слова. Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.

# Напишите программу, которая принимает на вход строку, и отслеживает, сколько раз каждый символ уже встречался. 
# Количество повторов добавляется к символам с помощью постфикса формата _n.
# Для решения данной задачи используйте функцию .split()

# text = ' a a a b c a a d c d d'
# my_list = text.split()

# dictionary = {}
# count = str()

# for letter in my_list:
#     if letter in dictionary.keys():
#         dictionary[letter] += 1
#         count += f'{letter}_{dictionary[letter]} '
#     else:
#         dictionary[letter] = 0
#         count += f'{letter} '
# print(text)
# print(count)


# Пользователь вводит текст(строка). Словом считается последовательность непробельных символов идущих подряд, слова разделены одним или большим числом пробелов. 
# Определите, сколько различных слов содержится в этом тексте.

# text = input()
# my_list = text.upper().split()

# long = len(set(my_list))

# print(long)
# print(set(my_list))


# Ваня и Петя поспорили, кто быстрее решит следующую задачу: “Задана последовательность неотрицательных целых чисел. Требуется определить значение наибольшего элемента последовательности, которая завершается первым встретившимся нулем (число 0 не входит в последовательность)”. Однако 2  друга оказались не такими смышлеными. Никто из ребят не смог до конца сделать это задание. 
# Они решили так: у кого будет меньше ошибок в коде, тот и выиграл спор. За помощью товарищи обратились к Вам, студентам.


# к ДЗ - множества уникальны и используются для аналитики - что уник, что сходится и тд
# в первой задаче intersection. и можно split 
#  ко второй ДЗ - по условиям задачи пользователь вводит значения количества кустов. На кусте столько ягод, какой куст. Пусть пользователь введет сколько ягод ввели. 